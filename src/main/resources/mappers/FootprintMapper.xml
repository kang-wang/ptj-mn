<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ptj.dao.FootprintMapper" >
  <resultMap id="BaseResultMap" type="com.ptj.pojo.Footprint" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="job_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="job_title" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="viewing_data" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="status" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="remark" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, job_id, job_title, viewing_data, status, remark
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from footprint
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from footprint
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ptj.pojo.Footprint" >
    insert into footprint (id, user_id, job_id, 
      job_title, viewing_data, status, 
      remark)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{jobId,jdbcType=INTEGER}, 
      #{jobTitle,jdbcType=VARCHAR}, #{viewingData,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ptj.pojo.Footprint" >
    insert into footprint
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="jobId != null" >
        job_id,
      </if>
      <if test="jobTitle != null" >
        job_title,
      </if>
      <if test="viewingData != null" >
        viewing_data,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="jobId != null" >
        #{jobId,jdbcType=INTEGER},
      </if>
      <if test="jobTitle != null" >
        #{jobTitle,jdbcType=VARCHAR},
      </if>
      <if test="viewingData != null" >
        #{viewingData,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ptj.pojo.Footprint" >
    update footprint
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="jobId != null" >
        job_id = #{jobId,jdbcType=INTEGER},
      </if>
      <if test="jobTitle != null" >
        job_title = #{jobTitle,jdbcType=VARCHAR},
      </if>
      <if test="viewingData != null" >
        viewing_data = #{viewingData,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ptj.pojo.Footprint" >
    update footprint
    set user_id = #{userId,jdbcType=INTEGER},
      job_id = #{jobId,jdbcType=INTEGER},
      job_title = #{jobTitle,jdbcType=VARCHAR},
      viewing_data = #{viewingData,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="findFootprintByUseridAndJobid" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from footprint
    where user_id = #{userId}
    and job_id = #{jobId}
  </select>
  <select id="findAllFootprint" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from footprint
    where user_id = #{userId}
    order by viewing_data desc
  </select>
</mapper>